查询姓“j”的老师的个数:
			select count(1),tname from where tname like "j%";
			
			
		查询生物课程比物理成绩高的所有学生的课程：
			select sid,sname from
			(select A.student_id
			from 
			(select score.sid,score.student_id,course.cname,score.num as ss from score left join course on score.course_id=course.cid where course.cname='生物') as A
			INNER JOIN
			(select score.sid,score.student_id,course.cname,score.num as ps from score left join course on score.course_id=course.cid where course.cname='物理') as B
			on A.student_id = B.student_id where ss>ps) as T 
			left join student on T.student_id = student.sid;
		
			
		查询没学过"Peter"老师课的学生的学号，姓名:
		    #Peter 老师任教的左右课的id：
			select cid from course left join teacher on course.teach_id=teacher.tid where teacher.tname='Peter';
			#SELECT student_id from score where course_id in(
			SELECT
				course.cid 
			FROM
				course
			LEFT JOIN teacher ON course.teach_id = teacher.tid 
			WHERE
				teacher.tname = 'John') 
				group by student_id	)
					;
	    查询学过编号为001并且也学过编号为002课程的同学的学号和姓名:
			select sname, sid from 
			(SELECT
				student_id 
			FROM
				score 
			WHERE
				course_id in (1,2) group by student_id having count(student_id) >1) as B left join student on
			B.student_id=student.sid
			;
			
		查询没学过"李平"老师课程的同学的学号，姓名:
			SELECT
			* 
			FROM
				student 
			WHERE
				sid NOT IN (
			SELECT DISTINCT
					student_id 
			FROM
					score 
			WHERE
				score.course_id IN ( SELECT cid FROM course LEFT JOIN teacher ON course.teacher_id = teacher.tid WHERE tname = '李平老师' ) 
				)
			
		查询课程编号002的成绩比001课程高的所有同学的学号，姓名：
			select student_id,sname from (select * from (SELECT score.student_id as s1, score.course_id as ci, score.num AS n1 FROM score WHERE course_id = 1 ) AS A
	INNER JOIN ( SELECT score.student_id, score.course_id, score.num AS n2 FROM score WHERE course_id = 2 ) AS B ON A.s1 = B.student_id 
	WHERE
		n1 > n2 ) as T left join student on T.s1=student.sid
		;
		
		查询有课程成绩小于60分的同学的学号，姓名:
			select student_id, sname from (
			select student_id from score where num<60) as A left join student on A.student_id=student.sid group by student_id;
			
			
			select distinct student_id, sname from 
			(select student_id from score where num<60) as A left join student on A.student_id=student.sid;
		
		
			select sid, sname from student where sid in 
			(select distinct student_id from score where num<60);
		
		查询没有学全全部课程的学生的学号和姓名:
			select sid,sname from student where sid in 
			(select student_id from score group by student_id having count(student_id)<);

			select sid, sname from student where sid in
			(select student_id from score group by student_id having count(student_id) < (select count(1) from course));

		
		12.查询至少有一门课与学号为“001”的同学所学相同的同学的学号和姓名；
			select sid,sname from student where sid in (select distinct student_id from score where course_id in 
			(select course_id from score where student_id=1));
			
			select student_id,sname, count(course_id) 
        from score left join student on score.student_id = student.sid
        where student_id != 1 and course_id in (select course_id from score where student_id = 1) group by student_id;
 
			
		13、查询至少学过学号为“001”同学所有课的其他同学学号和姓名；
			select student_id,sname, count(course_id) 
        from score left join student on score.student_id = student.sid
        where student_id != 1 and course_id in (select course_id from score where student_id = 1) group by student_id having count(course_id)= (select count(course_id) from score where student_id = 1);

			
		14.查询和“002”号的同学学习的课程完全相同的其他同学学号和姓名；
			select student_id,sname from score left join student on score.student_id = student.sid where student_id in (
            select student_id from score  where student_id != 1 group by student_id HAVING count(course_id) = (select count(1) from score where student_id = 1)
        ) and course_id in (select course_id from score where student_id = 1) group by student_id HAVING count(course_id) = (select count(1) from score where student_id = 1)
			
		16、向SC表中插入一些记录，这些记录要求符合以下条件：①没有上过编号“002”课程的同学学号；②插入“002”号课程的平均成绩； 
			insert into score(student_id, course_id, num) select sid,2,(select avg(num) from score where course_id = 2) 
    from student where sid not in (
        select student_id from score where course_id = 2
    )
	
		17、按平均成绩从低到高显示所有学生的“语文”、“数学”、“英语”三门的课程成绩，按如下形式显示： 学生ID,语文,数学,英语,有效课程数,有效平均分；
		    #取每个学生的生物，物理，体育成绩:
			select 
			student_id,
			(select num from score as s2 where s2.student_id=s1.student_id and course_id=1) as '生物',
			(select num from score as s2 where s2.student_id=s1.student_id and course_id=2)
			as '物理',
			(select num from score as s2 where s2.student_id=s1.student_id and course_id=3) as '体育'
			from score as s1 group by student_id;
			
		18.查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分；
			select course_id,max(num),min(num) from score group by course_id ;
			select course_id,max(num),case when min(num)<10 then 0 ELSE min(num) END as 'min(num)' from score group by course_id ;
			
		19、按各科平均成绩从低到高和及格率的百分数从高到低顺序；
			SELECT
			course_id,
			avg( num ),
			sum( CASE WHEN num < 10 THEN 0 ELSE 1 END ) AS '及格人数',
			sum( 1 ) AS '总人数',
			sum( CASE WHEN num < 10 THEN 0 ELSE 1 END )/ sum( 1 ) AS '及格率' 
			FROM
			score 
		GROUP BY
			course_id 
		ORDER BY
			avg( num ) ASC,
			'及格率' DESC;
			
			
		20、课程平均分从高到低显示（现实任课老师）；
			select tname,B.course_id from (select course_id ,avg(num) from score group by course_id order by avg(num) desc)
			as B left join teacher on B.course_id=teacher.tid ;
			
		21、查询各科成绩前三名的记录:(不考虑成绩并列情况) :
			select * from 
			(
			select
			student_id,
			course_id,
			num,
			(select num from score as s2 where s2.course_id =s1.course_id group by s2.num order by s2.num desc limit 0,1),
			(select num from score as s2 where s2.course_id =s1.course_id group by s2.num order by s2.num desc limit 2,1) as A
			from score as s1 )
			as B where B.num>B.A;
			
		22、查询每门课程被选修的学生数；
			 select course_id, count(1) from score group by course_id;
			 
		22(2)、查询至少有五名学生选的课程；
			select course_id,count(course_id) from score group by course_id having count(course_id) >5;
			
		23、查询出只选修了一门课程的全部学生的学号和姓名；
			select student_id,count(1) from score group by student_id having count(student_id)=1;
			
		24、查询男生、女生的人数；
			select gender,count(1) from student group by gender ;
			
		25、查询姓“张”的学生名单；
			select sname from student where sname like '张%';
			
		26、查询同名同姓学生名单，并统计同名人数；
			select sname,count(1) as count from student group by sname;
			
		27、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列；
			select course_id, avg(num) from score group by course_id order by avg(num) asc, course_id desc;
			
		29、查询课程名称为“数学”，且分数低于60的学生姓名和分数；
			select student_id, sname from (select student_id from score where course_id in (select cid from course where cname='生物') and num<60 )
			as B left join student on B.student_id=student.sid ;
			
			select student.sname,score.num from score 
			left join course on score.course_id = course.cid
			left join student on score.student_id = student.sid
			where score.num < 60 and course.cname = '生物'
			
		31、求选了课程的学生人数
			select distinct student_id from score group by student_id;
			
		34、查询不同课程但成绩相同的学生的学号、课程号、学生成绩:(笛卡尔积)
			select distinct s1.student_id,s1.course_id,s2.course_id,s1.num,s2.num from score as s1,score as s2 where s1.sid != s2.sid and s1.course_id!=s2.course_id and s1.num=s2.num ;
			
		36、检索至少选修两门课程的学生学号:
			select student_id from score group by student_id having count(student_id) > 1
			
		37、查询全部学生都选修的课程的课程号和课程名；
			select course_id,count(1) from score group by course_id having count(1) = (select count(1) from student);
		
		38、查询没学过“李平”老师讲授的任一门课程的学生姓名；
			同上
		
		